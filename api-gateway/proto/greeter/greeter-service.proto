syntax = "proto3";

option go_package = "proto/greeter";

import "google/api/annotations.proto";

service GreeterService {
  rpc Greet(Request) returns (Response) {
    option (google.api.http) = {
      post: "/"
      body: "*"
    };
  }

  rpc GreetTest(Request) returns (Response) {
    option (google.api.http) = {
      get: "/"
    };
  }
}

message Request {
  string name = 1;
}

message Response {
  string greeting = 2;
}



service UserService {
  rpc WriteUserRpc (WriteUserRequest) returns (Empty) {}
  rpc FindByIdRpc (FindByIdRequest) returns (FindByIdResponse) {
    option (google.api.http) = {
      get: "/api/follower/get-user/{id}"
    };
  }
  rpc CreateFollowConnectionRpc (CreateFollowConnectionRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/api/follower/follow-connection"
      body: "*"
    };
  }
  rpc GetFollowsRpc (GetFollowsRequest) returns (FollowsResponse) {
    option (google.api.http) = {
      get: "/api/follower/get-follows/{id}"
    };
  }
  rpc GetFollowersRpc (GetFollowersRequest) returns (FollowersResponse) {
    option (google.api.http) = {
      get: "/api/follower/get-followers/{id}"
    };
  }
  rpc GetSuggestionsForUserRpc (GetSuggestionsRequest) returns (SuggestionsResponse) {
    option (google.api.http) = {
      get: "/api/follower/get-suggestions/{id}"
    };
  }
  rpc CheckIfFollowingConnectionExistRpc (CheckIfFollowingConnectionExistRequest) returns (CheckResponse) {
    option (google.api.http) = {
      get: "/api/follower/check-following"
    };
  }
  rpc DeleteFollowConnectionRpc (DeleteFollowConnectionRequest) returns (Empty) {
    option (google.api.http) = {
      delete: "/api/follower/delete-follow-connection"
    };
  }
}

// Poruke zahteva i odgovora
message UserDto {
  int64 id = 1;
}

message WriteUserRequest{
  UserDto userDto = 1;
}

message FindByIdResponse{
  UserDto userDto = 1;
}


message Empty {}
message FindByIdRequest {
  int64 id = 1;
}
message CreateFollowConnectionRequest {
  int64 first_id = 1;
  int64 second_id = 2;
}
message GetFollowsRequest {
  int64 id = 1;
}
message GetFollowersRequest {
  int64 id = 1;
}
message GetSuggestionsRequest {
  int64 id = 1;
}
message CheckIfFollowingConnectionExistRequest {
  int64 id1 = 1;
  int64 id2 = 2;
}
message FollowsResponse {
  repeated int64 follows = 1;
}
message FollowersResponse {
  repeated int64 followers = 1;
} 
message SuggestionsResponse {
  repeated int64 suggestions = 1;
}
message CheckResponse {
  bool exists = 1;
}

message DeleteFollowConnectionRequest {
    int64 id1 = 1;
    int64 id2 = 2;
  }